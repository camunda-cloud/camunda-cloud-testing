<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <groupId>org.camunda.community</groupId>
    <artifactId>community-hub-release-parent</artifactId>
    <version>1.2.2</version>
  </parent>

  <groupId>io.camunda</groupId>
  <artifactId>zeebe-process-test</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>jar</packaging>

  <name>Zeebe Process Test</name>

  <scm>
    <connection>scm:git:git@github.com:camunda-cloud/zeebe-process-test.git</connection>
    <developerConnection>scm:git:git@github.com:camunda-cloud/zeebe-process-test.git</developerConnection>
    <tag>HEAD</tag>
    <url>https://github.com/camunda-cloud/zeebe-process-test</url>
  </scm>

  <properties>
    <dependency.assertj.version>3.21.0</dependency.assertj.version>
    <dependency.awaitility.version>4.1.1</dependency.awaitility.version>
    <dependency.errorprone.version>2.10.0</dependency.errorprone.version>
    <dependency.eze.version>0.6.0</dependency.eze.version>
    <dependency.findbugs.version>3.0.2</dependency.findbugs.version>
    <dependency.guava.version>31.0.1-jre</dependency.guava.version>
    <dependency.jackson.version>2.13.0</dependency.jackson.version>
    <dependency.jna.version>5.10.0</dependency.jna.version>
    <dependency.junit.version>5.8.2</dependency.junit.version>
    <dependency.junit4.version>4.13.2</dependency.junit4.version>
    <dependency.log4j.version>2.15.0</dependency.log4j.version>
    <dependency.mockito.version>4.1.0</dependency.mockito.version>
    <dependency.netty.version>4.1.70.Final</dependency.netty.version>
    <dependency.osgi.version>6.0.0</dependency.osgi.version>
    <dependency.protobuf.version>3.19.1</dependency.protobuf.version>
    <dependency.scala.version>2.13.7</dependency.scala.version>
    <dependency.slf4j.version>1.7.32</dependency.slf4j.version>
    <dependency.snakeyaml.version>1.29</dependency.snakeyaml.version>
    <dependency.spring.version>5.3.13</dependency.spring.version>
    <dependency.zeebe.version>1.2.5</dependency.zeebe.version>

    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>

    <nexus.release.repository>https://app.camunda.com/nexus/content/repositories/zeebe-io</nexus.release.repository>
    <nexus.release.repository.id>camunda-nexus</nexus.release.repository.id>
    <nexus.snapshot.repository>https://app.camunda.com/nexus/content/repositories/zeebe-io-snapshots</nexus.snapshot.repository>
    <nexus.snapshot.repository.id>camunda-nexus</nexus.snapshot.repository.id>

    <plugin.version.fmt>2.9.1</plugin.version.fmt>
    <plugin.version.googlejavaformat>1.12.0</plugin.version.googlejavaformat>
    <plugin.version.jacoco>0.8.7</plugin.version.jacoco>
    <plugin.version.javadoc>3.3.1</plugin.version.javadoc>
    <plugin.version.maven-enforcer>3.0.0</plugin.version.maven-enforcer>
    <plugin.version.spotless>2.17.6</plugin.version.spotless>
    <plugin.version.surefire>3.0.0-M5</plugin.version.surefire>

    <version.java>11</version.java>
  </properties>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.junit</groupId>
        <artifactId>junit-bom</artifactId>
        <version>${dependency.junit.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>${dependency.assertj.version}</version>
      </dependency>

      <dependency>
        <groupId>io.camunda</groupId>
        <artifactId>zeebe-bom</artifactId>
        <version>${dependency.zeebe.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- Only for dependency convergence issues -->
      <dependency>
        <groupId>com.google.protobuf</groupId>
        <artifactId>protobuf-java</artifactId>
        <version>${dependency.protobuf.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${dependency.guava.version}</version>
      </dependency>
      <dependency>
        <groupId>net.java.dev.jna</groupId>
        <artifactId>jna</artifactId>
        <version>${dependency.jna.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.errorprone</groupId>
        <artifactId>error_prone_annotations</artifactId>
        <version>${dependency.errorprone.version}</version>
      </dependency>
      <dependency>
        <groupId>org.scala-lang</groupId>
        <artifactId>scala-library</artifactId>
        <version>${dependency.scala.version}</version>
      </dependency>
      <dependency>
        <groupId>io.netty</groupId>
        <artifactId>netty-bom</artifactId>
        <version>${dependency.netty.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>com.fasterxml.jackson</groupId>
        <artifactId>jackson-bom</artifactId>
        <version>${dependency.jackson.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${dependency.junit4.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.code.findbugs</groupId>
        <artifactId>jsr305</artifactId>
        <version>${dependency.findbugs.version}</version>
      </dependency>
      <dependency>
        <groupId>org.osgi</groupId>
        <artifactId>org.osgi.core</artifactId>
        <version>${dependency.osgi.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-framework-bom</artifactId>
        <version>${dependency.spring.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${dependency.slf4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.yaml</groupId>
        <artifactId>snakeyaml</artifactId>
        <version>${dependency.snakeyaml.version}</version>
      </dependency>

      <!-- Test scope-->
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${dependency.mockito.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-workflow-engine</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-util</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-logstreams</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-test-util</artifactId>
    </dependency>

    <dependency>
      <groupId>io.camunda</groupId>
      <artifactId>zeebe-client-java</artifactId>
    </dependency>

    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${dependency.log4j.version}</version>
    </dependency>

    <!-- Test scope-->
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.awaitility</groupId>
      <artifactId>awaitility</artifactId>
      <version>${dependency.awaitility.version}</version>
      <scope>test</scope>
    </dependency>

  </dependencies>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>${plugin.version.maven-enforcer}</version>
        <configuration>
          <rules>
            <dependencyConvergence />
          </rules>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>enforce</goal>
            </goals>
            <phase>verify</phase>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>${plugin.version.javadoc}</version>
      </plugin>

      <!-- Google code format plugin -->
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>${plugin.version.spotless}</version>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>${plugin.version.googlejavaformat}</version>
              <style>GOOGLE</style>
            </googleJavaFormat>
          </java>
          <pom>
            <sortPom>
              <expandEmptyElements>false</expandEmptyElements>
              <spaceBeforeCloseEmptyElement>true</spaceBeforeCloseEmptyElement>
              <sortProperties>true</sortProperties>
            </sortPom>
          </pom>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
      </plugin>

      <!-- JaCoCo Plugin -->
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>${plugin.version.jacoco}</version>
        <executions>
          <execution>
            <id>coverage-initialize</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>coverage-report</id>
            <goals>
              <goal>report</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
          <!-- Threshold -->
        </executions>
      </plugin>

      <!-- Surefire plugin -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${plugin.version.surefire}</version>
      </plugin>

      <!-- Flaky Tests plugin -->
      <plugin>
        <groupId>io.zeebe</groupId>
        <artifactId>flaky-test-extractor-maven-plugin</artifactId>
        <version>2.0.4</version>
        <executions>
          <execution>
            <goals>
              <goal>extract-flaky-tests</goal>
            </goals>
            <phase>post-integration-test</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
